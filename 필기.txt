프론트 엔드 : 클라이언트, 디스플레이, 데이터를 그려준다(HTML에 의한).(렌더링)

API  : 창구
*서버가 원하는 방식으로 요구
백엔드 : 서버

<html>
<head> 문서정보
</head>
<body> 본문
</body>
</html>


margin : 테두리 외부 영역 거리
padding : 테두리로 부터 내부 영역 거리

----------
*모든 태크에 적용
. - class div(s)
#- id
---------------
let - 변수 선언
let a=숫자 or "문자열"(숫자도 문자로 인식)      **문자열은 '' "" 안에
       int         string

1.0 / 0.5 : float(소수, 유리수)
true or false - bool

int, string, float, bool
--------------
let first_name=~
_ : 띄어쓰기를 원할 때 대용, 띄어쓰기는 인식 불가

a+' '+b
' ' : 띄어쓰기 의미

== : 같다
!= : 다르다
------------------
list - 순서로 찾음 []로 지정
dict - 단어로  {}로 지정
컴퓨터 용어는 항상 "0번째"부터!


------------------

console.log
          .a
          .b


 ||    or
&& and
++ 자기 자신에게  +1

for (let i=0; i<100; i++)
         1       2       3
 

      만족조건


---------------------------
5/21

http
*type(method) GET, POST
GET : 서버에 데이터를 얻을 때
POST : 서버에 데이터를 기록할 때

*url ex)www.~~~
-내가 받고 싶은 것

*data(body) {}







*VS 단축키*

Ctrl + S -> 저장
Alt+B -> Browser로 열기
Alt+Shift+F -> 자동 들여쓰기

Ctrl+Shift+ [  or  ] -> 폴딩 on, off
자동 탭 형성 : 태그 문자만 쓰고 Tab

Ctrl+/ -> 주석화, 블라인드처리



margin: 상하 좌우 (테두리로부터 외부 거리)
2개 - 상하 좌우

--------
label for="a"
input ..... id="a"
라벨을 클릭하면 연결된 입력창에서 타이핑 가능
--------